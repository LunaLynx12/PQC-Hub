from kyber_py.ml_kem import ML_KEM_512

def test_kyber_key_exchange():
    print("\nğŸ”‘ Testing Kyber512 (Quantum-Safe Key Exchange)\n")

    # Step 1: Key Generation
    public_key, secret_key = ML_KEM_512.keygen()
    print("[+] Public Key:", public_key)
    print("[+] Secret Key:", secret_key)

    # Step 2: Encapsulate (sender uses public key to generate shared key + ciphertext)
    shared_key_sender, ciphertext = ML_KEM_512.encaps(public_key)
    print("\nğŸ“¤ Ciphertext (sent over network):", ciphertext)
    print("ğŸ”’ Shared Key (generated by sender):", shared_key_sender)

    # Step 3: Decapsulate (receiver uses secret key to recover shared key)
    shared_key_receiver = ML_KEM_512.decaps(secret_key, ciphertext)
    print("\nğŸ“¥ Shared Key (recovered by receiver):", shared_key_receiver)

    # Step 4: Check if keys match
    assert shared_key_sender == shared_key_receiver
    print("\nâœ… Keys match! Secure key exchange successful.")

if __name__ == "__main__":
    test_kyber_key_exchange()